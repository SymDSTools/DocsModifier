
<!DOCTYPE html>
<html>

<head>
	<title>WebView</title>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<link rel="stylesheet" href="../css/themes/default/theme.min.css" />
		<link rel="stylesheet" href="../css/themes/default/jquery.mobile.structure-1.2.0.min.css" />
		<script src="../js/energize-min.js"></script>
		<script src="../js/jquery-1.8.1.min.js"></script>
		<script src="../../../app.js"></script>
		<script src="../js/example.js"></script>
		<link rel="stylesheet" href="../css/docs.css" />
		<script src="../js/common.js"></script>
		<script src="../js/jquery.mobile-1.2.0.min.js"></script>
</head>

<body>

<div data-role="page" data-theme="a">

	<div data-role="header" data-position="fixed">
		<a href='#' class='ui-btn-left' data-icon='arrow-l' data-theme="c" onclick="history.back(); return false">Back</a> <h1>WebView</h1>
	</div><!-- /header -->

	<div data-role="content">

		<p> You can create a control to display local or remote web pages in your App using the <b>CreateWebView</b> method
		 of the <b>app</b> object: </p>

		<div class="samp">&nbsp;web = app.CreateWebView( width, height );</div>

		<p>If you are loading remote web pages, then you might want to use the <b>SetOnProgress</b> method to
		set the name of a callback function that you want called to report the progress of loading the page.</p>

		<p>You can use the <b>LoadUrl</b> method to load an internal or external web page or the <b>LoadHtml</b>
		method to load text directly from within your App.</p>

		<div class="samp">&nbsp;web.LoadUrl( url, options );</div>
		<div class="samp">&nbsp;web.LoadHtml( html, baseFolder, options );</div>

		<p>The supported options for LoadUrl and LoadHtml are: <b>"allowzoom"</b> (support zooming gestures), <b>"autozoom"</b> (zoom out the content to fit the WebView by width), <b>"wide"</b> (support the viewport meta tag, a wide viewport is used if the viewport meta tag is missing) and <b>"nolongtouch"</b> (WebView will not react to long touches).</p>

		<p>Note: Using a WebView can be a good way of displaying colored and formatted text areas in your App. If you set the
		BackColor to a transparent color you can show formatted text over a background image.</p>

		<p>If you need to, you can use the <b>Execute</b> method to execute JavaScript code within the WebView.</p>

		<div class="samp">&nbsp;web.Execute( text );</div><br>

		<div data-role="collapsible" data-collapsed="true"  data-mini="true" data-theme="a" data-content-theme="b">
				<h3>Example - Remote</h3>
				<div id="examp1" style="font-size:70%">
					function OnStart()<br>
					{<br>
					 &#160;&#160;&#160;&#160;lay = app.CreateLayout( "linear", "VCenter,FillXY" );<br><br>

					 <b id="snip1"  style="font-size:100%">
					 &#160;&#160;&#160;&#160; web = app.CreateWebView( 0.8, 0.8 );<br>
					 &#160;&#160;&#160;&#160; web.SetOnProgress( web_OnProgess );<br>
					 &#160;&#160;&#160;&#160; lay.AddChild( web );<br>
					 </b><br>
					 &#160;&#160;&#160;&#160; app.AddLayout( lay );<br><br>

					 &#160;&#160;&#160;&#160; app.ShowProgress("Loading...");<br>
					 &#160;&#160;&#160;&#160; web.LoadUrl( "http:///www.google.com" );<br>
					}<br>
					<br>

					function web_OnProgess( progress )<br>
					{<br>
					&#160;&#160;&#160;&#160; app.Debug( "progress = " + progress );<br>
					&#160;&#160;&#160;&#160; if( progress==100 ) app.HideProgress();<br>
					}<br>
				</div>
				<div name="divCopy" align="right">
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy(snip1)">&#160;&#160;&#160;&#160;Copy&#160;&#160;&#160;&#160;</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy(examp1)">Copy All</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo(examp1)">&#160;&#160;&#160;&#160;&nbsp;Run&#160;&#160;&#160;&#160;&nbsp;</a>
				</div>
		</div>

		<div data-role="collapsible" data-collapsed="true"  data-mini="true" data-theme="a" data-content-theme="b">
				<h3>Example - Local</h3>
				<div id="examp2" style="font-size:70%">
					function OnStart()<br>
					{<br>
					 &#160;&#160;&#160;&#160;lay = app.CreateLayout( "linear", "VCenter,FillXY" );<br><br>

					 <b id="snip2"  style="font-size:100%">
					 &#160;&#160;&#160;&#160; web = app.CreateWebView( 0.8, 0.8 );<br>
					 &#160;&#160;&#160;&#160; web.SetBackColor( "#00000000" );<br>
					 &#160;&#160;&#160;&#160; lay.AddChild( web );<br>
					 </b><br>
					 &#160;&#160;&#160;&#160; app.AddLayout( lay );<br><br>

					 &#160;&#160;&#160;&#160; web.LoadUrl( "file:///Sys/Html/Page.htm" );<br>
					}<br>
					<br>

				</div>
				<div name="divCopy" align="right">
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy(snip2)">&#160;&#160;&#160;&#160;Copy&#160;&#160;&#160;&#160;</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy(examp2)">Copy All</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo(examp2)">&#160;&#160;&#160;&#160;&nbsp;Run&#160;&#160;&#160;&#160;&nbsp;</a>
				</div>
		</div>

		<div data-role="collapsible" data-collapsed="true"  data-mini="true" data-theme="a" data-content-theme="b">
				<h3>Example - Direct</h3>
				<div id="examp3" style="font-size:70%">
					function OnStart()<br>
					{<br>
					 &#160;&#160;&#160;&#160;lay = app.CreateLayout( "linear", "VCenter,FillXY" );<br><br>

					 <b id="snip3"  style="font-size:100%">
					 &#160;&#160;&#160;&#160; web = app.CreateWebView( 0.8, 0.8 );<br>
					 &#160;&#160;&#160;&#160; web.SetBackColor( "#00000000" );<br>
					 &#160;&#160;&#160;&#160; lay.AddChild( web );<br>
					 </b><br>
					 &#160;&#160;&#160;&#160; app.AddLayout( lay );<br><br>

					 &#160;&#160;&#160;&#160; var html = "<<!-- -->html><<!-- -->head>";<br>
					 &#160;&#160;&#160;&#160; html += "<<!-- -->meta name='viewport' content='width=device-width'>";<br>
					 &#160;&#160;&#160;&#160; html += "<<!-- -->/head><<!-- -->body>Hello World!<<!-- -->br>";<br>
					 &#160;&#160;&#160;&#160; html += "<<!-- -->img src='Img/Droid2.png'>";<br>
					 &#160;&#160;&#160;&#160; html += "<<!-- -->/body><<!-- -->/html>";<br>
					 &#160;&#160;&#160;&#160; web.LoadHtml( html</a>, "file:///Sys/" );<br>
					}<br>
					<br>

				</div>
				<div name="divCopy" align="right">
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy(snip3)">&#160;&#160;&#160;&#160;Copy&#160;&#160;&#160;&#160;</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy(examp3)">Copy All</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo(examp3)">&#160;&#160;&#160;&#160;&nbsp;Run&#160;&#160;&#160;&#160;&nbsp;</a>
				</div>
		</div>
		<br>

		<p>See '<a href='../app/CreateWebView.htm'>CreateWebView</a> for more informations and a complete function list</p>

	</div><!-- /content -->
</div><!-- /page -->

</body>
</html>
